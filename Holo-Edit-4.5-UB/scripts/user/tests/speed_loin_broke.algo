// imports and declarations
import holoedit.data.*;
import static holoedit.functions.ScriptEditorFunctions.*;
import static java.lang.Math.*;

HoloPoint inpoint;
HoloTraj trajectory = new HoloTraj();	// creates a new trajectory

// going through the trajectory in the time selection
int trajectorySize = getTrajectorySize();

int beginDate = getBeginDate();	// sets the first date of this trajectory as the begining of the time selection
double duration = getDuration();	// defines this trajectory's duration as the duration of the time selection
int endDate = getEndDate();

int resolution = 5

float datePointer = beginDate;

for (int t = beginDate ; t < endDate ; t += resolution) {
	
	
	inpoint = getTrajectoryPointTimePol((float)datePointer);	// takes a point...
	//post(" "+t);
	if(inpoint != null){
	HoloPoint point = new HoloPoint();	// create a new point
	point.date = t;			// ... and modifies its settings
	point.x = inpoint.x
	point.y = inpoint.y
	point.z = inpoint.z
	
	datePointer += resolution*(pow(inpoint.getModule()/800,0.2));

	trajectory.addElement(point);
	}else
	{
	datePointer += resolution;
	}
}

// the trajectory, its duration, and its beginDate must be returned
Object[] toReturn = [trajectory, duration, beginDate];
return toReturn;
